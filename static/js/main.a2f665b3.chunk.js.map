{"version":3,"sources":["App.tsx","context/CartAndFavContext.tsx","context/DetailedProductContext.tsx","context/SortAndPagesContext.tsx","index.tsx"],"names":["App","CartAndFavContext","React","createContext","CartAndFavProvider","children","useState","isAddedToCart","setIsAddedToCart","isAddedToFav","setIsAddedToFav","fav","JSON","parse","localStorage","getItem","cart","cartProducts","setCartProducts","favProducts","setFavProducts","visibleFavProducts","setVisibleFavProducts","Provider","value","DetailedProductContext","DetailedProductProvider","detailedProduct","setDetailedProduct","SortAndPagesContext","SortAndPagesProvider","itemsOnPage","setItemsOnPage","currentPage","setCurrentPage","sortingByValue","setSortingByValue","ReactDOM","render","document","getElementById"],"mappings":"wMAyOeA,EA3MH,WAwDV,OACE,mCA4Ie,U,uBCjONC,EACXC,IAAMC,cAA0B,MAKrBC,EAAsC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACpD,EAA0CC,oBAAS,GAAM,mBAAlDC,EAAa,KAAEC,EAAgB,KACtC,EAAwCF,oBAAS,GAAM,mBAAhDG,EAAY,KAAEC,EAAe,KAE9BC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IACxDC,EAAOJ,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,IAEhE,EAAwCT,mBAASU,GAAQ,IAAG,mBAArDC,EAAY,KAAEC,EAAe,KACpC,EAAsCZ,mBAASK,GAAO,IAAG,mBAAlDQ,EAAW,KAAEC,EAAc,KAClC,EAAoDd,mBAASa,GAAY,mBAAlEE,EAAkB,KAAEC,EAAqB,KAEhD,OACE,cAACrB,EAAkBsB,SAAQ,CAACC,MAAO,CACjCP,eACAC,kBACAC,cACAC,iBACAC,qBACAC,wBACAf,gBACAC,mBACAC,eACAC,mBACA,SAECL,KC/BMoB,EACXvB,IAAMC,cAA0B,MAMrBuB,EAA2C,SAAH,GAAsB,IAAhBrB,EAAQ,EAARA,SACzD,EAA8CC,qBAAU,mBAAjDqB,EAAe,KAAEC,EAAkB,KAE1C,OACE,cAACH,EAAuBF,SAAQ,CAACC,MAAO,CACtCG,kBAAiBC,sBACjB,SAECvB,KCfMwB,EAAsB3B,IAAMC,cAA0B,MAMtD2B,EAAwC,SAAH,GAAsB,IAAhBzB,EAAQ,EAARA,SACtD,EAAsCC,mBAAS,IAAG,mBAA3CyB,EAAW,KAAEC,EAAc,KAClC,EAAsC1B,mBAAS,GAAE,mBAA1C2B,EAAW,KAAEC,EAAc,KAClC,EAA4C5B,mBAAS,UAAS,mBAAvD6B,EAAc,KAAEC,EAAiB,KAExC,OACE,cAACP,EAAoBN,SAAQ,CAACC,MAAO,CACnCO,cACAC,iBACAC,cACAC,iBACAC,iBACAC,qBACA,SAEC/B,KChBPgC,IAASC,OACP,cAAC,IAAM,UACL,cAAC,EAAkB,UACjB,cAAC,EAAuB,UACtB,cAAC,EAAoB,UACnB,cAAC,EAAG,YAKZC,SAASC,eAAe,W","file":"static/js/main.a2f665b3.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport './App.scss';\n// import {\n//   Routes, Route, Navigate,\n// } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\n// import { Footer } from './components/Footer/Footer';\n// import { Header } from './components/Header/Header/Header';\n// import {\n//   ProductsListWithSlider,\n// } from './components/Pages/Home/ProductsListWithSlider/ProductsListWithSlider';\n// import {\n//   ProductsSlider,\n// } from './components/Pages/Home/ProductsSlider/ProductsSlider';\n// import {\n//   ShopByCategory,\n// } from './components/Pages/Home/ShopByCategory/ShopByCategory';\n// import { CartPage } from './components/Pages/Cart/CartPage';\n// import { FavouritesPage } from './components/Pages/Favourites/FavouritesPage';\n// import {\n//   ProductsCardPage,\n// } from\n//   './components/Pages/Categories/ProductPagePage/ProductCardList/ProductsCardPage/ProductsCardPage';\n// import {\n//   ProductDetailsPage,\n// } from\n//   './components/Pages/Categories/ProductPagePage/ProductCardList/ProductDetailsPage/ProductDetailsPage';\n// import { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n// import { Product } from './types/types';\n\nconst App = () => {\n  // const [IPhones, setIPhones] = useState([]);\n  // const [shuffeledIPhones, setShuffeledIPhones] = useState([]);\n  // const [visibleIPhones, setVisibleIPhones] = useState<Product[]>(IPhones);\n  // const [hotPriceProducts, setHotPriceProducts] = useState([]);\n  // const [brandNewProducts, setBrandNewProducts] = useState([]);\n  // const [searchInput, setSearchInput] = useState('');\n\n  // const getHotPriceProducts = () => {\n  //   setHotPriceProducts(\n  //     IPhones.filter((item: Product) => item.price < item.fullPrice)\n  //       .sort((a: Product, b: Product) => a.price - b.price),\n  //   );\n  // };\n\n  // const getBrandNewProducts = () => {\n  //   setBrandNewProducts(\n  //     IPhones.filter((item: Product) => item.price < item.fullPrice)\n  //       .sort((a: Product, b: Product) => b.price - a.price),\n  //   );\n  // };\n\n  // const getSuggestedProducts = () => {\n  //   setShuffeledIPhones(IPhones.sort(() => 0.5 - Math.random()));\n  // };\n\n  // useEffect(() => {\n  //   getBrandNewProducts();\n  //   getHotPriceProducts();\n  //   getSuggestedProducts();\n  // }, [IPhones]);\n\n  // const getIPhones = async () => {\n  //   try {\n  //     const response = await fetch(\n  //       'new/products.json',\n  //       {\n  //         method: 'GET',\n  //       },\n  //     );\n\n  //     if (response.status === 200) {\n  //       const result = await response.json();\n\n  //       setIPhones(result);\n  //       setVisibleIPhones(result);\n  //     }\n  //   } catch (err) {\n  //     throw new Error('Error');\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getIPhones();\n  // }, []);\n\n  return (\n    <>\n      {/* <Header\n        setVisibleIPhones={setVisibleIPhones}\n        IPhones={IPhones}\n        searchInput={searchInput}\n        setSearchInput={setSearchInput}\n      />\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n        <Route\n          path=\"/home\"\n          element={(\n            <main>\n              <ProductsSlider />\n              <ProductsListWithSlider\n                products={hotPriceProducts}\n                title=\"Hot prices\"\n              />\n              <ShopByCategory\n                phones={IPhones}\n              />\n              <ProductsListWithSlider\n                products={brandNewProducts}\n                title=\"Brand new models\"\n              />\n            </main>\n          )}\n        />\n\n        <Route path=\"/phones\">\n          <Route\n            index\n            element={(\n              <main>\n                <ProductsCardPage\n                  products={IPhones}\n                  setProducts={setIPhones}\n                  setVisibleProducts={setVisibleIPhones}\n                  visibleProducts={visibleIPhones}\n                  title=\"Phones\"\n                  searchInput={searchInput}\n                />\n              </main>\n            )}\n          />\n          <Route\n            path=\":id\"\n            element={(\n              <main>\n                <ProductDetailsPage\n                  products={IPhones}\n                />\n                <ProductsListWithSlider\n                  products={shuffeledIPhones}\n                  title=\"You may also like\"\n                />\n              </main>\n            )}\n          />\n        </Route>\n\n        <Route path=\"/tablets\">\n          <Route\n            index\n            element={(\n              <main>\n                <ProductsCardPage\n                  products={[]}\n                  visibleProducts={[]}\n                  title=\"Tablets\"\n                  searchInput={searchInput}\n                />\n              </main>\n            )}\n          />\n        </Route>\n\n        <Route path=\"/accessories\">\n          <Route\n            index\n            element={(\n              <main>\n                <ProductsCardPage\n                  products={[]}\n                  visibleProducts={[]}\n                  title=\"Accessories\"\n                  searchInput={searchInput}\n                />\n              </main>\n            )}\n          />\n        </Route>\n\n        <Route\n          path=\"/cart\"\n          element={(\n            <main>\n              <CartPage />\n            </main>\n          )}\n        />\n        <Route\n          path=\"/favourites\"\n          element={(\n            <main>\n              <FavouritesPage />\n            </main>\n          )}\n        />\n        <Route\n          path=\"/rights\"\n          element={(\n            <main>\n              <div className=\"body12\">\n                At vero eos et\n                accusamus et iusto odio dignissimos ducimus qui blanditiis\n                praesentium\n                voluptatum deleniti\n                atque corrupti quos dolores et\n                quas molestias excepturi sint.\n              </div>\n            </main>\n          )}\n        />\n        <Route\n          path=\"/contacts\"\n          element={(\n            <main>\n              <h3 className=\"body12\">\n                Modile: 12345678\n                <br />\n                Facebook: iphone777\n              </h3>\n            </main>\n          )}\n        />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n      <footer>\n        <Footer />\n      </footer> */}\n      ffff\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState } from 'react';\n\nexport const CartAndFavContext\n= React.createContext<any | null>(null);\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const CartAndFavProvider: React.FC<Props> = ({ children }) => {\n  const [isAddedToCart, setIsAddedToCart] = useState(false);\n  const [isAddedToFav, setIsAddedToFav] = useState(false);\n\n  const fav = JSON.parse(localStorage.getItem('favProducts') || '');\n  const cart = JSON.parse(localStorage.getItem('cartProducts') || '');\n\n  const [cartProducts, setCartProducts] = useState(cart || []);\n  const [favProducts, setFavProducts] = useState(fav || []);\n  const [visibleFavProducts, setVisibleFavProducts] = useState(favProducts);\n\n  return (\n    <CartAndFavContext.Provider value={{\n      cartProducts,\n      setCartProducts,\n      favProducts,\n      setFavProducts,\n      visibleFavProducts,\n      setVisibleFavProducts,\n      isAddedToCart,\n      setIsAddedToCart,\n      isAddedToFav,\n      setIsAddedToFav,\n    }}\n    >\n      {children}\n    </CartAndFavContext.Provider>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const DetailedProductContext\n= React.createContext<null | any>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const DetailedProductProvider: React.FC<Props> = ({ children }) => {\n  const [detailedProduct, setDetailedProduct] = useState();\n\n  return (\n    <DetailedProductContext.Provider value={{\n      detailedProduct, setDetailedProduct,\n    }}\n    >\n      {children}\n    </DetailedProductContext.Provider>\n  );\n};\n","import React, { useState } from 'react';\n\nexport const SortAndPagesContext = React.createContext<any | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const SortAndPagesProvider: React.FC<Props> = ({ children }) => {\n  const [itemsOnPage, setItemsOnPage] = useState(16);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortingByValue, setSortingByValue] = useState('newest');\n\n  return (\n    <SortAndPagesContext.Provider value={{\n      itemsOnPage,\n      setItemsOnPage,\n      currentPage,\n      setCurrentPage,\n      sortingByValue,\n      setSortingByValue,\n    }}\n    >\n      {children}\n    </SortAndPagesContext.Provider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { CartAndFavProvider } from './context/CartAndFavContext';\nimport { DetailedProductProvider } from './context/DetailedProductContext';\nimport { SortAndPagesProvider } from './context/SortAndPagesContext';\n\nReactDOM.render(\n  <Router>\n    <CartAndFavProvider>\n      <DetailedProductProvider>\n        <SortAndPagesProvider>\n          <App />\n        </SortAndPagesProvider>\n      </DetailedProductProvider>\n    </CartAndFavProvider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}